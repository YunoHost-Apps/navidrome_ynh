#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..." --weight=2

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
language=$(ynh_app_setting_get --app=$app --key=language)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
port=$(ynh_app_setting_get --app=$app --key=port)

enable_downloads=$(ynh_app_setting_get --app=$app --key=enable_downloads)
scanner_extractor=$(ynh_app_setting_get --app=$app --key=scanner_extractor)
enable_animation=$(ynh_app_setting_get --app=$app --key=enable_animation)
enable_transcoding=$(ynh_app_setting_get --app=$app --key=enable_transcoding)
welcome_message=$(ynh_app_setting_get --app=$app --key=welcome_message)

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=4

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	ynh_clean_check_starting
	# Restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="stop" --log_path=systemd

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

# Cleaning legacy permissions
if ynh_legacy_permissions_exists; then
	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

if [ -z "$language" ]; then
	language="en"
	ynh_app_setting_set --app=$app --key=language --value=$language
fi

if [ -z "$enable_animation" ]; then
	enable_animation="true"
	ynh_app_setting_set --app=$app --key=enable_animation --value=$enable_animation
fi

if [ -z "$enable_downloads" ]; then
	enable_downloads="true"
	ynh_app_setting_set --app=$app --key=enable_downloads --value=$enable_downloads
fi

if [ -z "$scanner_extractor" ]; then
	scanner_extractor="taglib"
	ynh_app_setting_set --app=$app --key=scanner_extractor --value=$scanner_extractor
fi

if [ -z "$enable_transcoding" ]; then
	enable_transcoding="false"
	ynh_app_setting_set --app=$app --key=enable_transcoding --value=$enable_transcoding
fi

if [ -z "$welcome_message" ]; then
	welcome_message=""
	ynh_app_setting_set --app=$app --key=welcome_message --value=$welcome_message
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Making sure dedicated system user exists..." --weight=1

# Create a dedicated user (if not existing)
ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=5

	# Remove the app directory securely
	ynh_secure_remove --file=$final_path

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$final_path" --source_id=$YNH_ARCH
fi

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:$app "$final_path"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..." --weight=8

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=2

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# UPDATE A CONFIG FILE
#=================================================
# ynh_script_progression --message="Updating a configuration file..."

# config_path="/var/lib/$app"

# # Uncomment when there is new options added upstream
# ynh_add_config --template="../conf/navidrome.toml" --destination="$config_path/navidrome.toml"

# chmod 600 "$config_path/navidrome.toml"
# chown -R $app:$app "$config_path"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..." --weight=2

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add $app --description="Web-based music collection server and streamer"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="start" --log_path=systemd --line_match="Version:"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
